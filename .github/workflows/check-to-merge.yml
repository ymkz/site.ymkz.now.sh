on:
  pull_request:
    types: [synchronize, opened, reopened, closed]
env:
  CI: true
  TZ: Asia/Tokyo
  CACHE: cache-0.0.0
  HUSKY_SKIP_INSTALL: 1
  PR_NUMBER: ${{ github.event.number }}
  ZEIT_TOKEN: ${{ secrets.ZEIT_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "node: `node --version`"
          echo "npm:  v`npm --version`"
          echo "yarn: v`yarn --version`"
          echo "now:  v`now --version`"
      - run: echo "${GITHUB_CONTEXT}"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
  check:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${CACHE}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${CACHE}-yarn-
      - run: yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - run: yarn run lint:js
      - run: yarn run lint:css
      - run: yarn run typecheck
  build:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize'
    needs: check
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${CACHE}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${CACHE}-yarn-
      - uses: actions/cache@v1
        id: build-cache
        with:
          path: .next
          key: ${CACHE}-build-${GITHUB_SHA}
          restore-keys: ${CACHE}-build-${GITHUB_SHA}
      - run: yarn run build
        if: steps.build-cache.outputs.cache-hit != 'true'
  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize'
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${CACHE}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${CACHE}-yarn-
      - uses: actions/cache@v1
        id: build-cache
        with:
          path: .next
          key: ${CACHE}-build-${GITHUB_SHA}
          restore-keys: ${CACHE}-build-${GITHUB_SHA}
      - run: >
          now
          --no-clipboard
          --token ${ZEIT_TOKEN}
          > deployment-preview-url.txt
      - run: >
          now
          alias
          --token ${ZEIT_TOKEN}
          `cat deployment-preview-url.txt`
          ymkzco-pr-${PR_NUMBER}.now.sh
      - run: >
          curl
          -X POST
          -H "Authorization: token $GITHUB_TOKEN"
          -d "{ \"body\": \"Deploy Preview is ready on https://ymkzco-pr-${PR_NUMBER}.now.sh\" }"
          ${{ github.event.pull_request.comments_url }}
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
  debug-deploy-preview:
    runs-on: ubuntu-latest
    needs: deploy-preview
    steps:
      - uses: actions/checkout@v2
      - run: >
          curl
          "https://api.zeit.co/v11/now/deployments/get?url=ymkzco-pr-$PR_NUMBER.now.sh"
          -H "Authorization: Bearer $ZEIT_TOKEN"
          | jq ".id"
          > deployment-preview-id.txt
      - run: cat deployment-preview-id.txt
  cleanup-preview:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    steps:
      - uses: actions/checkout@v2
      - run: >
          curl
          "https://api.zeit.co/v11/now/deployments/get?url=ymkzco-pr-$PR_NUMBER.now.sh"
          -H "Authorization: Bearer $ZEIT_TOKEN"
          | jq ".id"
          > deployment-preview-id.txt
      - run: cat deployment-preview-id.txt
      # - run: >
      #     now
      #     remove
      #     --yes
      #     --token ${ZEIT_TOKEN}
      #     `cat deployment-preview-url.txt`
